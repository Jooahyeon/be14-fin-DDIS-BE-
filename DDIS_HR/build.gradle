plugins {
    id 'java'
    id 'org.springframework.boot' version '3.4.5'
    id 'io.spring.dependency-management' version '1.1.7'
    id 'org.openapi.generator' version '6.6.0'
}

group = 'com.DDIS'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

jar {
    enabled = false
}

repositories {
    mavenCentral()
}

dependencies {

    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.mybatis.spring.boot:mybatis-spring-boot-starter:3.0.4'
    implementation 'org.springframework.boot:spring-boot-starter-mail'
    implementation 'org.springframework.boot:spring-boot-starter-data-redis-reactive'
    implementation 'org.springframework.boot:spring-boot-starter-data-redis'
    implementation 'org.springframework.boot:spring-boot-starter-data-jdbc'
    testImplementation 'io.projectreactor:reactor-test'
    compileOnly 'org.projectlombok:lombok'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.mybatis.spring.boot:mybatis-spring-boot-starter-test:3.0.4'
    testImplementation 'org.springframework.security:spring-security-test'
    runtimeOnly 'org.mariadb.jdbc:mariadb-java-client'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
    implementation 'com.warrenstrange:googleauth:1.5.0'
    implementation 'com.google.zxing:core:3.5.1'
    implementation 'com.google.zxing:javase:3.5.1'
    implementation 'commons-codec:commons-codec:1.17.0'
    implementation "org.springdoc:springdoc-openapi-starter-webmvc-ui:2.7.0"
    implementation "org.springdoc:springdoc-openapi-starter-webmvc-api:2.7.0"
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    runtimeOnly 'io.micrometer:micrometer-registry-prometheus'


    // https://mvnrepository.com/artifact/org.modelmapper/modelmapper
    implementation 'org.modelmapper:modelmapper:3.2.0'

    // https://mvnrepository.com/artifact/io.jsonwebtoken/jjwt-api
    implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
    // https://mvnrepository.com/artifact/io.jsonwebtoken/jjwt-impl
    implementation 'io.jsonwebtoken:jjwt-impl:0.11.5'
    // https://mvnrepository.com/artifact/io.jsonwebtoken/jjwt-jackson
    runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.11.5'

    // AWS 설정 dependency
    implementation 'software.amazon.awssdk:s3:2.25.30' // 최신 AWS SDK for Java v2

    // pdf 전송용
    implementation 'org.thymeleaf:thymeleaf'
    implementation 'org.xhtmlrenderer:flying-saucer-pdf-openpdf:9.1.22'

    // spring batch
    implementation 'org.springframework.boot:spring-boot-starter-batch'

    // websocket
    implementation 'org.springframework.boot:spring-boot-starter-websocket'
    implementation 'com.fasterxml.jackson.core:jackson-databind'
    implementation 'com.fasterxml.jackson.dataformat:jackson-dataformat-yaml:2.15.2'
}



openApiGenerate {
    generatorName.set('html2')                                // html2, markdown 등
    inputSpec.set("$projectDir/api-docs.json")               // 스펙 파일 경로
    // outputDir 에 buildDirectory 프로바이더 사용
    outputDir.set(
            layout.buildDirectory
                    .dir('generated-docs')
                    .map { dir -> dir.asFile.absolutePath }
    )
}

tasks.build.dependsOn tasks.openApiGenerate

tasks.named('test') {
    useJUnitPlatform()
}
tasks.named('build') {
    dependsOn tasks.named('openApiGenerate') // build 시 문서도 자동 생성
}

tasks.register('testEapproval', Test) {
    useJUnitPlatform()
    // 테스트 클래스 파일 경로 기준 패턴
    include 'com/ddis/ddis_hr/eapproval/**'
    // 필요하면 로깅/리포트 옵션도 여기서
}

